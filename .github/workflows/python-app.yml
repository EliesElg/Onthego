# This workflow will install Python dependencies, run tests, and lint for a Django project
name: Django application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: testdb
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    - name: Lint with flake8
      run: |
        # Exécuter flake8 avec une configuration spécifique
        flake8 . --config=.flake8 || echo "Ignoring flake8 warnings"
        # Vérifier uniquement les erreurs critiques de syntaxe et noms non définis
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics || echo "Critical issues found"
        # Continuer avec des avertissements pour des erreurs de complexité ou de style
        flake8 . --exit-zero

    - name: Set up database
      env:
        DATABASE_URL: postgres://postgres:postgres@127.0.0.1:5432/testdb
      run: |
        sudo apt-get update
        sudo apt-get install libpq-dev
        cd back/Onthego2  # Navigate to the "Onthego2" directory
        python manage.py makemigrations
        python manage.py migrate
    - name: Run Django tests
      env:
        DATABASE_URL: postgres://postgres:postgres@127.0.0.1:5432/testdb
      run: |
        cd back/Onthego2  # Navigate to the "Onthego2" directory
        python manage.py test
